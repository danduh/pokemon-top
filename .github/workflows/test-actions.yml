name: Build and Test CI

on:
  workflow_dispatch:
  push:
    branches: ['main']
  pull_request:

permissions:
  checks: write
  pull-requests: write
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - run: npm ci
      - name: Build Details
        if: always()
        run: |
          npx nx run details:build
          npx nx run pokemon-details:component-test
          npx nx run details:component-test
          npx nx run details-e2e:e2e

      - name: Merge Details Reports
        if: success() || failure() # run this step even if previous step failed
        run: |
          npm run details-merge-results
          npm run pokemon-details-merge-results
          npm run details-e2e-merge-results

      - name: Details App Component Tests Report
        uses: phoenix-actions/test-reporting@v8
        id: details-app-component-report # Set ID reference for step
        if: always() # run this step even if previous step failed
        with:
          name: Details App Component Tests # Name of the check run which will be created
          path: ${{ github.workspace }}/apps/details/cypress/results/json/merged.json # Path to test results
          reporter: mochawesome-json # Format of test results

      - name: Pokemon Details Component Tests Report
        uses: phoenix-actions/test-reporting@v8
        id: pokemon-details-component-report # Set ID reference for step
        if: always() # run this step even if previous step failed
        with:
          name: Details App Component Tests # Name of the check run which will be created
          path: ${{ github.workspace }}/libs/pokemon-details/cypress/results/json/merged.json # Path to test results
          reporter: mochawesome-json # Format of test results

      - name: Details Integration & E2E Tests Report
        uses: phoenix-actions/test-reporting@v8
        id: details-e2e-report # Set ID reference for step
        if: always() # run this step even if previous step failed
        with:
          name: Details Integration & E2E Tests # Name of the check run which will be created
          path: ${{ github.workspace }}/apps/details-e2e/cypress/results/json/merged.json # Path to test results
          reporter: mochawesome-json # Format of test results

      - name: Build List
        if: always()
        run: |
          npx nx run list:build:production
          npx nx run pokemon-list:component-test
          npx nx run list-e2e:e2e

      - name: Merge List Reports
        if: success() || failure() # run this step even if previous step failed
        run: |
          npm run list-merge-results
          npm run list-e2e-merge-results

      - name: List Component Tests Report
        uses: phoenix-actions/test-reporting@v8
        id: list-component-report # Set ID reference for step
        if: always() # run this step even if previous step failed
        with:
          name: List Component Tests # Name of the check run which will be created
          path: ${{ github.workspace }}/libs/pokemon-list/cypress/results/json/merged.json # Path to test results
          reporter: mochawesome-json # Format of test results

      - name: List Integration & E2E Tests Report
        uses: phoenix-actions/test-reporting@v8
        id: list-e2e-report # Set ID reference for step
        if: always() # run this step even if previous step failed
        with:
          name: List Integration & E2E Tests # Name of the check run which will be created
          path: ${{ github.workspace }}/apps/list-e2e/cypress/results/json/merged.json # Path to test results
          reporter: mochawesome-json # Format of test results

#        run: npm run build:react
#      - run: npm run test:react
#      - run: npm run validate:react
#      - run: npm run e2e:react

#      - name: Build Pokemon
#        if: always()
#        run: npm run build:lit
#      - run: npm run test:lit
#      - run: npm run validate:lit
#      - run: npm run e2e:lit
#
#      - name: Merge Reports
#        if: success() || failure() # run this step even if previous step failed
#        run: npm run merge-reports:examples
#
#      - name: Upload coverage reports to Codecov
#        uses: codecov/codecov-action@v3
#        env:
#          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
#        with:
#          files: |
#            ${{ github.workspace }}/examples/lit/pokemon-catalog/target/component/coverage-final.json,
#            ${{ github.workspace }}/examples/angular/pokemon-catalog/target/component/coverage-final.json,
#            ${{ github.workspace }}/examples/angular/pokemon-catalog/target/integration/coverage-final.json,
#            ${{ github.workspace }}/examples/react/pokemon-catalog/target/integration/coverage-final.json
#          verbose: true
#      - name: Angular Tests Report
#        uses: phoenix-actions/test-reporting@v8
#        id: test-report-angular # Set ID reference for step
#        if: always() # run this step even if previous step failed
#        with:
#          name: Angular Tests # Name of the check run which will be created
#          path: ${{ github.workspace }}/examples/angular/pokemon-catalog/cypress/results/json/merged.json # Path to test results
#          reporter: mochawesome-json # Format of test results
#      - name: React Tests Report
#        uses: phoenix-actions/test-reporting@v8
#        id: test-report-react # Set ID reference for step
#        if: always() # run this step even if previous step failed
#        with:
#          name: React Tests # Name of the check run which will be created
#          path: ${{ github.workspace }}/examples/react/pokemon-catalog/cypress/results/json/merged.json # Path to test results
#          reporter: mochawesome-json # Format of test results
#      - name: Lit Tests Report
#        uses: phoenix-actions/test-reporting@v8
#        id: test-report-lit # Set ID reference for step
#        if: always() # run this step even if previous step failed
#        with:
#          name: Lit Tests # Name of the check run which will be created
#          path: ${{ github.workspace }}/examples/lit/pokemon-catalog/cypress/results/json/merged.json # Path to test results
#          reporter: mochawesome-json # Format of test results
